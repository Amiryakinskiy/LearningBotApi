// <auto-generated />
using LearningBotApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LearningBotApi.Migrations
{
    [DbContext(typeof(LearningBotContext))]
    partial class LearningBotContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.4");

            modelBuilder.Entity("LearningBotApi.Models.Addition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ThemeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.ToTable("Additions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Image = "literature",
                            Text = "Дополнительный материал",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Image = "test_icon",
                            Text = "Итоговый тест",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Image = "megaphone_icon",
                            Text = "Аудио-лекция",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Image = "literature",
                            Text = "Дополнительный материал",
                            ThemeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Image = "test_icon",
                            Text = "Итоговый тест",
                            ThemeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Image = "literature",
                            Text = "Дополнительный материал",
                            ThemeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Image = "test_icon",
                            Text = "Итоговый тест",
                            ThemeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Image = "megaphone_icon",
                            Text = "Аудио-лекция",
                            ThemeId = 3
                        },
                        new
                        {
                            Id = 9,
                            Image = "literature",
                            Text = "Дополнительный материал",
                            ThemeId = 4
                        },
                        new
                        {
                            Id = 10,
                            Image = "megaphone_icon",
                            Text = "Аудио-лекция",
                            ThemeId = 4
                        });
                });

            modelBuilder.Entity("LearningBotApi.Models.SubTheme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ThemeId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ThemeId");

                    b.ToTable("SubThemes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "",
                            Link = "/Timemanagement",
                            Name = "Тайм менеджмент тим лида",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "",
                            Link = "/Matrix",
                            Name = "Матрица Эйзенхауэра",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "",
                            Link = "/ABCDE",
                            Name = "МЕТОД Abcde",
                            ThemeId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "",
                            Link = "/lider",
                            Name = "Кто такой лидер?",
                            ThemeId = 2
                        },
                        new
                        {
                            Id = 5,
                            Content = "",
                            Link = "/liderStyle",
                            Name = "Стили лидерства",
                            ThemeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "",
                            Link = "/settingTask",
                            Name = "Постановка задач модели",
                            ThemeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Content = "",
                            Link = "/delegate",
                            Name = "Делегирование",
                            ThemeId = 3
                        },
                        new
                        {
                            Id = 8,
                            Content = "",
                            Link = "/workCulture",
                            Name = "Культура совместной работы",
                            ThemeId = 4
                        },
                        new
                        {
                            Id = 9,
                            Content = "",
                            Link = "/teamRole",
                            Name = "Роли в команде",
                            ThemeId = 4
                        });
                });

            modelBuilder.Entity("LearningBotApi.Models.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BlockNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlockNumber = 1,
                            Name = "Тайм-менеджмент"
                        },
                        new
                        {
                            Id = 2,
                            BlockNumber = 2,
                            Name = "Навык Лидерство"
                        },
                        new
                        {
                            Id = 3,
                            BlockNumber = 3,
                            Name = "Управление задачами"
                        },
                        new
                        {
                            Id = 4,
                            BlockNumber = 4,
                            Name = "Управление с командой"
                        });
                });

            modelBuilder.Entity("LearningBotApi.Models.Addition", b =>
                {
                    b.HasOne("LearningBotApi.Models.Theme", "Theme")
                        .WithMany("Additions")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("LearningBotApi.Models.SubTheme", b =>
                {
                    b.HasOne("LearningBotApi.Models.Theme", "Theme")
                        .WithMany("SubThemes")
                        .HasForeignKey("ThemeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Theme");
                });

            modelBuilder.Entity("LearningBotApi.Models.Theme", b =>
                {
                    b.Navigation("Additions");

                    b.Navigation("SubThemes");
                });
#pragma warning restore 612, 618
        }
    }
}
